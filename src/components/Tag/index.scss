@use "sass:color";
@use "sass:map";
@import "/src/styles/variables";
@import "/src/styles/global";

$_tag-font-size: 1em;
$_tag-padding: 0.5em;
$tag-config: (
  primary: (class: "primary",
  color: $primary-color),
  secondary: (class:"secondary",
  color: $secondary-color),
  success: (class :"success",
  color: $success-color)
);

.tag {
  @each $key,
    $value in $tag-config {
    $class: map.get($value, class);
    $color: map.get($value, color);

    &--#{$class} {
      border-color: $color;
      background-color: white;
      color: $color;

      &:hover {
        background:
          color.adjust($color, $lightness: 30%)
          radial-gradient(circle, transparent 1%, color.adjust($color, $lightness: 30%) 1%)
          center/15000%;
      }

      &:active {
        background-color: color.adjust($color, $lightness: 10%);
        background-size: 100%;
        transition: background 0s;
      }
    }
  }

  display: flex;
  flex-wrap: nowrap;
  gap: 0.5em;
  justify-content: space-between;
  overflow: hidden;
  width: fit-content;
  height: $_tag-font-size + $_tag-padding * 2;
  margin: 0;
  padding: $_tag-padding calc($_tag-padding + 0.5em);
  border: 1.2px solid;
  border-radius: $_tag-font-size + $_tag-padding;
  background-position: center;
  font-size: $_tag-font-size;
  line-height: $_tag-font-size;
  white-space: nowrap;
  cursor: pointer;
  transition: background 0.5s;

  &__icon {
    display: flex;
    align-items: center;
    justify-items: center;
    color: currentcolor;

    * {
      color: currentcolor;
    }
  }

  &__text {
    overflow: hidden;
    width: fit-content;
    height: $_tag-font-size;
    color: inherit;
    font-weight: 900;
  }

  &:disabled,
  &:disabled * {
    cursor: default;

    &:hover {
      filter: brightness(100%);
    }
  }
}
