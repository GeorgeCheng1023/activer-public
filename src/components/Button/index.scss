@use "sass:map";
@use "sass:color";
@import "~/src/variables";

$btn-config: (
  primary:(class: "primary",
  color: white,
  bg: $primary-color,
),
secondary:(class: "secondary",
color: white,
bg: $secondary-color,
),
success:(class: "success",
color: white,
bg: $success-color,
),
dark:(class: "dark",
color: white,
bg: $primary-font-color,
),
white:(class: "white",
color:$primary-font-color,
bg: white, ),
danger:(class:"danger",
color: white,
bg:$danger-color)
);

@mixin set-color($borderColor, $textColor, $bgColor) {
  border: 2px $borderColor solid;
  background-color: $bgColor;
  color: $textColor;
}

.button {
  // default variant
  @each $name,
    $value in $btn-config {
    $class: map.get($value, class);
    $color: map.get($value, color);
    $bg: map.get($value, bg);

    &--#{$class} {
      @include set-color($bg, $color, $bg);

      &:hover:not([disabled]) {
        border-color: color.adjust($color, $lightness: -10%);
        background-color: color.adjust($color, $lightness: -10%);
      }
    }
  }

  display: flex;
  gap: 10px;
  justify-content: center;
  align-items: center;
  width: fit-content;
  height: fit-content;
  padding: 0.6em 1.8em;
  border-radius: 0.8em;
  font-size: 1em;
  letter-spacing: 1px;
  cursor: pointer;
  transition-duration: 0.3s;

  &--lg {
    font-size: 1.5em;
  }

  &--sm {
    padding: 0.4em 1.8em;
    font-size: 0.8em;
  }

  // outline variant
  &.button--outline {
    @each $name,
      $value in $btn-config {
      $class: map.get($value, class);
      $color: map.get($value, color);
      $bg: map.get($value, bg);

      &.button--#{$class} {
        @include set-color($bg, $bg, $color);

        &:hover:not([disabled]) {
          background-color: color.adjust($color, $lightness: 30%);
        }
      }
    }
  }

  // round variant
  &.button--round {
    width: 40px !important;
    height: 40px;
    padding: 1em;
    border-radius: 50%;
  }

  // reverse color variant
  &.button--reverse-color {
    @each $name,
      $value in $btn-config {
      $class: map.get($value, class);
      $color: map.get($value, color);
      $bg: map.get($value, bg);

      &.button--#{$class} {
        @include set-color($color, $bg, $color);

        &:hover:not([disabled]) {
          background-color: color.adjust($color, $lightness: -10%);
        }
      }
    }
  }

  * {
    background-color: transparent;
    color: inherit;
    text-align: center;
  }

  &__icon {
    display: flex;
    align-items: center;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}
