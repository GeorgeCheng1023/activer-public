@import '../../variables';

$_btn-config:(primary:(class: 'primary',
    color: white,
    hover-color: #fdf5e7,
    bg: $primary-color,
  ),
  secondary:(class: 'secondary',
    color: white,
    hover-color: #B0CDF9,
    bg: $secondary-color,
  ),
  success:(class: 'success',
    color: white,
    hover-color: #efffef,
    bg: $success-color,
  ),
  white:(class: 'white',
    color: $primary-font-color,
    hover-color: #e4e4e4,
    bg: white,
  ),
);

@mixin setColor ($borderColor, $textColor, $bgColor) {
  border: 2px $borderColor solid;
  background-color: $bgColor;
  color: $textColor;
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;

  width: fit-content;
  height: fit-content;
  padding: 0.6em 1.8em;
  border-radius: 0.8em;

  letter-spacing: 1px;


  transition-duration: 0.3s;
  cursor: pointer;

  &--lg {
    font-size: 1.5em;
  }

  &--sm {
    font-size: 0.8em;
    padding: 0.4em 1.8em;
  }


  // default variant
  @each $name,
  $value in $_btn-config {
    $class: map-get($value, class);
    $color: map-get($value, color);
    $bg: map-get($value, bg);
    $hover-color: map-get($value, hover-color);

    &--#{$class} {
      @include setColor($color, $color, $bg);

      &:hover:not([disabled]) {
        @include setColor($bg, $bg, $hover-color);

      }
    }
  }

  // outline variant
  &.button--outline {

    @each $name,
    $value in $_btn-config {
      $class: map-get($value, class);
      $color: map-get($value, color);
      $bg: map-get($value, bg);
      $hover-color: map-get($value, hover-color);

      &.button--#{$class} {
        @include setColor($bg, $bg, $color);

        &:hover:not([disabled]) {
          @include setColor($bg, $bg, $hover-color);

        }
      }
    }
  }

  // icon variant 
  &.button--icon {
    width: 40px !important;
    height: 40px;
    padding: 0;
    border-radius: 50%;
  }

  * {
    color: inherit;
    background-color: transparent;
    text-align: center;
  }

  &__icon {
    display: flex;
    align-items: center;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed
  }
}